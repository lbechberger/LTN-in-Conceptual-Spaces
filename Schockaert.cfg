[ltn-default]
# number of receptive fields per predicate; default: 5
ltn_layers = 1                 
# factor to which large weights are penalized; default: 0.0000001
ltn_smooth_factor = 1e-10       
# appropriate t-conorm is used to compute disjunction of literals within clauses; options: 'product', 'yager2', 'luk', 'goedel'; default: 'product'
ltn_tnorm = luk
# aggregation across data points when computing validity of a clause; options: 'product', 'mean', 'gmean', 'hmean', 'min'; default: 'min'         
ltn_aggregator = hmean        
# optimizing algorithm to use; options: 'ftrl', 'gd', 'ada', 'rmsprop'; default: 'gd' 
ltn_optimizer = rmsprop    
# aggregate over clauses to define overall satisfiability of KB; options: 'min', 'mean', 'hmean', 'wmean'; default: 'min'   
ltn_clauses_aggregator = hmean 
# penalty for predicates that are true everywhere; default: 1e-6
ltn_positive_fact_penalty = 1e-5  
# initialization of the u vector (determining how close to 0 and 1 the membership values can get); default: 5.0
ltn_norm_of_u = 5.0

[20-d-small]
# 20-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_20_cropped/
rules_file = data/movielens/no_rules.txt
num_dimensions = 20
max_iter = 1000

[20-d]
# 20-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_20/
rules_file = data/movielens/no_rules.txt
num_dimensions = 20
max_iter = 1000

[50-d]
# 50-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_50/
rules_file = data/movielens/no_rules.txt
num_dimensions = 50
max_iter = 1000

[100-d]
# 100-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_100/
rules_file = data/movielens/no_rules.txt
num_dimensions = 100
max_iter = 1000

[200-d]
# 200-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_200/
rules_file = data/movielens/no_rules.txt
num_dimensions = 200
max_iter = 1000