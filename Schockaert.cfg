[ltn-default]
# number of receptive fields per predicate; default: 5
layers = 1                 
# factor to which large weights are penalized; default: 0.0000001
smooth_factor = 1e-10       
# appropriate t-conorm is used to compute disjunction of literals within clauses; options: 'product', 'yager2', 'luk', 'goedel'; default: 'product'
tnorm = luk
# aggregation across data points when computing validity of a clause; options: 'product', 'mean', 'gmean', 'hmean', 'min'; default: 'min'         
aggregator = hmean        
# optimizing algorithm to use; options: 'ftrl', 'gd', 'ada', 'rmsprop'; default: 'gd' 
optimizer = rmsprop    
# aggregate over clauses to define overall satisfiability of KB; options: 'min', 'mean', 'hmean', 'wmean'; default: 'min'   
clauses_aggregator = hmean 
# penalty for predicates that are true everywhere; default: 1e-6
positive_fact_penalty = 1e-5  
# initialization of the u vector (determining how close to 0 and 1 the membership values can get); default: 5.0
norm_of_u = 5.0
# smoothing parameter for covariance matrix of 'rbf' type; default: 1e-4
epsilon = 1e-4

[20-d-small]
# 20-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_20_cropped/
rules_file = data/movielens/no_rules.txt
num_dimensions = 20
epochs = 1000

[20-d]
# 20-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_20/
rules_file = data/movielens/no_rules.txt
num_dimensions = 20
epochs = 1000

[20-d-linear]
# 20-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_20/
rules_file = data/movielens/no_rules.txt
num_dimensions = 20
epochs = 1000
type = linear

[20-d-quadratic]
# 20-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_20/
rules_file = data/movielens/no_rules.txt
num_dimensions = 20
epochs = 1000
type = quadratic

[20-d-rbf]
# 20-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_20/
rules_file = data/movielens/no_rules.txt
num_dimensions = 20
epochs = 1000
type = rbf

[20-d-prototype]
# 20-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_20/
rules_file = data/movielens/no_rules.txt
num_dimensions = 20
epochs = 1000
type = prototype

[20-d-cuboid]
# 20-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_20/
rules_file = data/movielens/no_rules.txt
num_dimensions = 20
epochs = 1000
type = cuboid

[50-d]
# 50-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_50/
rules_file = data/movielens/no_rules.txt
num_dimensions = 50
epochs = 1000

[100-d]
# 100-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_100/
rules_file = data/movielens/no_rules.txt
num_dimensions = 100
epochs = 1000

[200-d]
# 200-d vectors
concepts_file = data/Schockaert/genres.txt
features_folder = data/Schockaert/features_200/
rules_file = data/movielens/no_rules.txt
num_dimensions = 200
epochs = 1000

[20-d-projected]
# 20-d vectors projected onto interpretable directions
concepts_file = data/Schockaert-projected/genres.txt
features_folder = data/Schockaert-projected/features_20/
rules_file = data/movielens/no_rules.txt
num_dimensions = 40
epochs = 1000

[50-d-projected]
# 50-d vectors projected onto interpretable directions
concepts_file = data/Schockaert-projected/genres.txt
features_folder = data/Schockaert-projected/features_50/
rules_file = data/movielens/no_rules.txt
num_dimensions = 100
epochs = 1000

[100-d-projected]
# 100-d vectors projected onto interpretable directions
concepts_file = data/Schockaert-projected/genres.txt
features_folder = data/Schockaert-projected/features_100/
rules_file = data/movielens/no_rules.txt
num_dimensions = 200
epochs = 1000

[200-d-projected]
# 200-d vectors projected onto interpretable directions
concepts_file = data/Schockaert-projected/genres.txt
features_folder = data/Schockaert-projected/features_200/
rules_file = data/movielens/no_rules.txt
num_dimensions = 400
epochs = 1000

[20-d-projected_cleaned]
features_folder = data/Schockaert-projected/features_20_cleaned/
num_dimensions = 40
epochs = 1000
rules_file = data/movielens/no_rules_cleaned.txt
concepts_file = data/Schockaert-projected/genres_cleaned.txt

[50-d-projected_cleaned]
rules_file = data/movielens/no_rules_cleaned.txt
features_folder = data/Schockaert-projected/features_50_cleaned/
epochs = 1000
concepts_file = data/Schockaert-projected/genres_cleaned.txt
num_dimensions = 100

[100-d-projected_cleaned]
rules_file = data/movielens/no_rules_cleaned.txt
epochs = 1000
concepts_file = data/Schockaert-projected/genres_cleaned.txt
features_folder = data/Schockaert-projected/features_100_cleaned/
num_dimensions = 200

[200-d-projected_cleaned]
num_dimensions = 400
rules_file = data/movielens/no_rules_cleaned.txt
features_folder = data/Schockaert-projected/features_200_cleaned/
epochs = 1000
concepts_file = data/Schockaert-projected/genres_cleaned.txt

[200-d_cleaned]
epochs = 1000
rules_file = data/movielens/no_rules_cleaned.txt
num_dimensions = 200
features_folder = data/Schockaert/features_200_cleaned/
concepts_file = data/Schockaert/genres_cleaned.txt

[100-d_cleaned]
features_folder = data/Schockaert/features_100_cleaned/
concepts_file = data/Schockaert/genres_cleaned.txt
num_dimensions = 100
rules_file = data/movielens/no_rules_cleaned.txt
epochs = 1000

[50-d_cleaned]
concepts_file = data/Schockaert/genres_cleaned.txt
epochs = 1000
rules_file = data/movielens/no_rules_cleaned.txt
num_dimensions = 50
features_folder = data/Schockaert/features_50_cleaned/

[20-d_cleaned]
rules_file = data/movielens/no_rules_cleaned.txt
concepts_file = data/Schockaert/genres_cleaned.txt
epochs = 1000
features_folder = data/Schockaert/features_20_cleaned/
num_dimensions = 20

