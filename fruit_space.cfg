[ltn-default]
# number of receptive fields per predicate; default: 5
ltn_layers = 1                 
# factor to which large weights are penalized; default: 0.0000001
ltn_smooth_factor = 1e-10       
# appropriate t-conorm is used to compute disjunction of literals within clauses; options: 'product', 'yager2', 'luk', 'goedel'; default: 'product'
ltn_tnorm = luk
# aggregation across data points when computing validity of a clause; options: 'product', 'mean', 'gmean', 'hmean', 'min'; default: 'min'         
ltn_aggregator = min        
# optimizing algorithm to use; options: 'ftrl', 'gd', 'ada', 'rmsprop'; default: 'gd' 
ltn_optimizer = rmsprop    
# aggregate over clauses to define overall satisfiability of KB; options: 'min', 'mean', 'hmean', 'wmean'; default: 'min'   
ltn_clauses_aggregator = mean 
# penalty for predicates that are true everywhere; default: 1e-6
ltn_positive_fact_penalty = 1e-5  
# initialization of the u vector (determining how close to 0 and 1 the membership values can get); default: 5.0
ltn_norm_of_u = 5.0

[fruit-default]
concepts_file = data/fruit_space/concepts_fruit.txt
features_file = data/fruit_space/features_fruit.csv
rules_file = data/fruit_space/rules_fruit.txt
num_dimensions = 3
training_percentage = 0.5

[simple]
# only 4 concepts (banana, pear, orange, lemon) with clean data & no rules
concepts_file = data/fruit_space/concepts_simple.txt
features_file = data/fruit_space/features_simple.csv
rules_file = data/fruit_space/rules_simple.txt
num_dimensions = 3
training_percentage = 0.5

[fruit-clean]
# all fruit concepts with clean data & no rules
concepts_file = data/fruit_space/concepts_fruit.txt
features_file = data/fruit_space/features_clean.csv
rules_file = data/fruit_space/rules_simple.txt
num_dimensions = 3
training_percentage = 0.5
